version: '3.8'

services:
  # MongoDB Database para desenvolvimento
  mongodb:
    image: mongo:6.0
    container_name: gestao_projetos_db_dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: gestao_projetos_dev
    volumes:
      - mongodb_dev_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - app-network

  # Backend Node.js para desenvolvimento
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gestao_projetos_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:admin123@mongodb:27017/gestao_projetos_dev?authSource=admin
      JWT_SECRET: jwt_secret_desenvolvimento
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongodb
    ports:
      - "5000:5000"
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run dev

  # Frontend React para desenvolvimento
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: gestao_projetos_frontend_dev
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000
      CHOKIDAR_USEPOLLING: true
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  mongodb_dev_data:
    driver: local

networks:
  app-network:
    driver: bridge