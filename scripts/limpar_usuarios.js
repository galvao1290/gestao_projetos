const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

// Fun√ß√£o para limpar usu√°rios mantendo apenas 'smartseg'
async function limparUsuarios() {
  try {
    // Conectar ao MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/gestao_projetos');
    console.log('‚úÖ Conectado ao MongoDB');

    // Verificar se o usu√°rio 'smartseg' existe
    const usuarioSmartSeg = await User.findOne({ username: 'smartseg' });
    
    if (!usuarioSmartSeg) {
      console.log('‚ùå Usu√°rio "smartseg" n√£o encontrado no sistema!');
      console.log('Criando usu√°rio smartseg...');
      
      // Criar usu√°rio smartseg se n√£o existir
      const novoSmartSeg = new User({
        nome: 'Smart Seg Admin',
        username: 'smartseg',
        senha: 'smartseg123', // Ser√° hasheada automaticamente
        role: 'ADM',
        ativo: true
      });
      
      await novoSmartSeg.save();
      console.log('‚úÖ Usu√°rio "smartseg" criado com sucesso!');
    } else {
      console.log('‚úÖ Usu√°rio "smartseg" encontrado no sistema');
    }

    // Contar usu√°rios antes da exclus√£o
    const totalAntes = await User.countDocuments();
    console.log(`üìä Total de usu√°rios antes da limpeza: ${totalAntes}`);

    // Excluir todos os usu√°rios exceto 'smartseg'
    const resultado = await User.deleteMany({ 
      username: { $ne: 'smartseg' } 
    });

    console.log(`üóëÔ∏è  Usu√°rios exclu√≠dos: ${resultado.deletedCount}`);
    
    // Contar usu√°rios ap√≥s a exclus√£o
    const totalDepois = await User.countDocuments();
    console.log(`üìä Total de usu√°rios ap√≥s a limpeza: ${totalDepois}`);
    
    // Listar usu√°rios restantes
    const usuariosRestantes = await User.find({}, 'nome username role ativo');
    console.log('\nüë• Usu√°rios restantes no sistema:');
    usuariosRestantes.forEach(user => {
      console.log(`   - ${user.nome} (@${user.username}) - ${user.role} - ${user.ativo ? 'Ativo' : 'Inativo'}`);
    });

    console.log('\n‚úÖ Limpeza de usu√°rios conclu√≠da com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante a limpeza de usu√°rios:', error);
  } finally {
    // Fechar conex√£o
    await mongoose.connection.close();
    console.log('üîå Conex√£o com MongoDB fechada');
    process.exit(0);
  }
}

// Executar o script
console.log('üöÄ Iniciando limpeza de usu√°rios...');
console.log('‚ö†Ô∏è  ATEN√á√ÉO: Este script ir√° excluir TODOS os usu√°rios exceto "smartseg"!');
console.log('‚è≥ Aguarde...');

limparUsuarios();