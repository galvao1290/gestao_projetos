version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: gestao_projetos_db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: gestao_projetos
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - app-network

  # Backend Node.js
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gestao_projetos_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/gestao_projetos?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-seu_jwt_secret_super_seguro_aqui}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    depends_on:
      - mongodb
    ports:
      - "5000:5000"
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs

  # Frontend React
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: gestao_projetos_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000}
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network

  # Nginx Reverse Proxy (opcional para produção)
  nginx:
    image: nginx:alpine
    container_name: gestao_projetos_proxy
    restart: unless-stopped
    ports:
      - "443:443"
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge